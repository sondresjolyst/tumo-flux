apiVersion: batch/v1
kind: Job
metadata:
  name: vault-transit-bootstrap
  namespace: vault-transit
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: bootstrap
          image: alpine:latest
          command:
            - /bin/sh
            - -c
            - |
              set -e

              echo "📦 Installing Vault CLI and jq..."
              apk add --no-cache curl jq bash
              VAULT_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/vault | jq -r .current_version)
              curl -L -o vault.zip https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip
              unzip vault.zip
              mv vault /usr/local/bin/
              chmod +x /usr/local/bin/vault

              echo "🔗 Setting up Vault environment..."

              echo "⏳ Waiting for Vault to be ready at $VAULT_ADDR..."
              until vault status -format=json | grep '"initialized": false' > /dev/null; do
                echo "Waiting..." && sleep 2
              done

              echo "🔐 Initializing Vault..."
              vault operator init -format=json -key-shares=5 -key-threshold=3 > /tmp/init.json

              echo "🔓 Unsealing Vault..."
              for i in 0 1 2; do
                key=$(jq -r ".unseal_keys_b64[$i]" /tmp/init.json)
                vault operator unseal "$key"
              done

              export VAULT_TOKEN=$(jq -r ".root_token" /tmp/init.json)

              echo "🚀 Enabling Transit..."
              vault secrets enable transit

              echo "🔑 Creating auto-unseal key..."
              vault write -f transit/keys/autounseal

              echo "📜 Writing autounseal policy..."
              vault policy write autounseal - <<EOF
              path "transit/encrypt/autounseal" {
                capabilities = ["update"]
              }
              path "transit/decrypt/autounseal" {
                capabilities = ["update"]
              }
              EOF

              echo "🎫 Generating token..."
              TOKEN=$(vault token create -policy=autounseal -period=8760h -format=json | jq -r '.auth.client_token')

              echo "📦 Writing token to vault namespace as secret..."
              kubectl create ns vault --dry-run=client -o yaml | kubectl apply -f -
              kubectl delete secret vault-b-unseal-token -n vault --ignore-not-found
              kubectl create secret generic vault-b-unseal-token -n vault --from-literal=token="$TOKEN"

              echo "✅ Vault Transit bootstrapped!"
          env:
            - name: VAULT_ADDR
              value: http://vault.vault-transit.svc:8200
